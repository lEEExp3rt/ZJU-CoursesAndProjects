////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : disp_num.vf
// /___/   /\     Timestamp : 01/02/2024 10:07:46
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -sympath /home/ise/Final_test_portion/ipcore_dir -intstyle ise -family kintex7 -verilog /home/ise/Final_test_portion/disp_num.vf -w /home/ise/Final_test_portion/disp_num.sch
//Design Name: disp_num
//Device: kintex7
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module MyMC14495_MUSER_disp_num(D0, 
                                D1, 
                                D2, 
                                D3, 
                                LE, 
                                point, 
                                a, 
                                b, 
                                c, 
                                d, 
                                e, 
                                f, 
                                g, 
                                p);

    input D0;
    input D1;
    input D2;
    input D3;
    input LE;
    input point;
   output a;
   output b;
   output c;
   output d;
   output e;
   output f;
   output g;
   output p;
   
   wire XLXN_18;
   wire XLXN_25;
   wire XLXN_29;
   wire XLXN_30;
   wire XLXN_31;
   wire XLXN_32;
   wire XLXN_33;
   wire XLXN_34;
   wire XLXN_54;
   wire XLXN_55;
   wire XLXN_67;
   wire XLXN_72;
   wire XLXN_73;
   wire XLXN_74;
   wire XLXN_75;
   wire XLXN_76;
   wire XLXN_79;
   wire XLXN_80;
   wire XLXN_82;
   wire XLXN_83;
   wire XLXN_84;
   wire XLXN_85;
   wire XLXN_86;
   wire XLXN_87;
   wire XLXN_88;
   wire XLXN_89;
   wire XLXN_90;
   wire XLXN_91;
   wire XLXN_92;
   wire XLXN_93;
   wire XLXN_129;
   wire XLXN_130;
   
   AND4  XLXI_60 (.I0(D3), 
                 .I1(D2), 
                 .I2(XLXN_67), 
                 .I3(XLXN_129), 
                 .O(XLXN_33));
   AND4  XLXI_61 (.I0(XLXN_55), 
                 .I1(D2), 
                 .I2(D1), 
                 .I3(D0), 
                 .O(XLXN_34));
   AND4  XLXI_69 (.I0(D3), 
                 .I1(XLXN_130), 
                 .I2(D1), 
                 .I3(XLXN_129), 
                 .O(XLXN_83));
   AND4  XLXI_73 (.I0(XLXN_55), 
                 .I1(XLXN_130), 
                 .I2(D1), 
                 .I3(XLXN_129), 
                 .O(XLXN_87));
   AND4  XLXI_77 (.I0(D3), 
                 .I1(XLXN_130), 
                 .I2(D1), 
                 .I3(D0), 
                 .O(XLXN_93));
   AND4  XLXI_78 (.I0(D3), 
                 .I1(D2), 
                 .I2(XLXN_67), 
                 .I3(D0), 
                 .O(XLXN_76));
   AND4  XLXI_79 (.I0(XLXN_55), 
                 .I1(D2), 
                 .I2(XLXN_67), 
                 .I3(XLXN_129), 
                 .O(XLXN_85));
   AND4  XLXI_80 (.I0(XLXN_55), 
                 .I1(XLXN_67), 
                 .I2(XLXN_130), 
                 .I3(D0), 
                 .O(XLXN_54));
   OR2  XLXI_88 (.I0(XLXN_18), 
                .I1(LE), 
                .O(g));
   OR2  XLXI_89 (.I0(XLXN_31), 
                .I1(LE), 
                .O(f));
   OR2  XLXI_90 (.I0(XLXN_32), 
                .I1(LE), 
                .O(e));
   OR2  XLXI_91 (.I0(XLXN_30), 
                .I1(LE), 
                .O(d));
   OR2  XLXI_92 (.I0(XLXN_29), 
                .I1(LE), 
                .O(c));
   OR2  XLXI_93 (.I0(XLXN_25), 
                .I1(LE), 
                .O(b));
   OR2  XLXI_94 (.I0(XLXN_92), 
                .I1(LE), 
                .O(a));
   INV  XLXI_95 (.I(D3), 
                .O(XLXN_55));
   INV  XLXI_97 (.I(D1), 
                .O(XLXN_67));
   INV  XLXI_98 (.I(D0), 
                .O(XLXN_129));
   INV  XLXI_99 (.I(point), 
                .O(p));
   OR3  XLXI_101 (.I0(XLXN_72), 
                 .I1(XLXN_34), 
                 .I2(XLXN_33), 
                 .O(XLXN_18));
   OR3  XLXI_110 (.I0(XLXN_88), 
                 .I1(XLXN_87), 
                 .I2(XLXN_86), 
                 .O(XLXN_29));
   OR3  XLXI_114 (.I0(XLXN_82), 
                 .I1(XLXN_80), 
                 .I2(XLXN_79), 
                 .O(XLXN_32));
   AND3  XLXI_115 (.I0(XLXN_55), 
                  .I1(XLXN_130), 
                  .I2(XLXN_67), 
                  .O(XLXN_72));
   AND3  XLXI_116 (.I0(XLXN_55), 
                  .I1(D1), 
                  .I2(D0), 
                  .O(XLXN_73));
   OR4  XLXI_118 (.I0(XLXN_76), 
                 .I1(XLXN_75), 
                 .I2(XLXN_74), 
                 .I3(XLXN_73), 
                 .O(XLXN_31));
   OR4  XLXI_119 (.I0(XLXN_54), 
                 .I1(XLXN_85), 
                 .I2(XLXN_84), 
                 .I3(XLXN_83), 
                 .O(XLXN_30));
   OR4  XLXI_120 (.I0(XLXN_91), 
                 .I1(XLXN_90), 
                 .I2(XLXN_88), 
                 .I3(XLXN_89), 
                 .O(XLXN_25));
   AND3  XLXI_121 (.I0(XLXN_55), 
                  .I1(XLXN_130), 
                  .I2(D1), 
                  .O(XLXN_74));
   AND3  XLXI_122 (.I0(XLXN_55), 
                  .I1(XLXN_130), 
                  .I2(D0), 
                  .O(XLXN_75));
   AND3  XLXI_124 (.I0(XLXN_130), 
                  .I1(XLXN_67), 
                  .I2(D0), 
                  .O(XLXN_79));
   AND3  XLXI_125 (.I0(XLXN_55), 
                  .I1(D2), 
                  .I2(XLXN_67), 
                  .O(XLXN_80));
   AND2  XLXI_127 (.I0(XLXN_55), 
                  .I1(D0), 
                  .O(XLXN_82));
   AND3  XLXI_128 (.I0(D2), 
                  .I1(D1), 
                  .I2(D0), 
                  .O(XLXN_84));
   AND3  XLXI_129 (.I0(D3), 
                  .I1(D2), 
                  .I2(D1), 
                  .O(XLXN_86));
   AND3  XLXI_130 (.I0(D3), 
                  .I1(D1), 
                  .I2(D0), 
                  .O(XLXN_89));
   AND3  XLXI_131 (.I0(D3), 
                  .I1(D2), 
                  .I2(XLXN_129), 
                  .O(XLXN_88));
   AND3  XLXI_132 (.I0(D2), 
                  .I1(D1), 
                  .I2(XLXN_129), 
                  .O(XLXN_90));
   AND4  XLXI_133 (.I0(XLXN_55), 
                  .I1(D2), 
                  .I2(XLXN_67), 
                  .I3(D0), 
                  .O(XLXN_91));
   OR4  XLXI_134 (.I0(XLXN_54), 
                 .I1(XLXN_85), 
                 .I2(XLXN_76), 
                 .I3(XLXN_93), 
                 .O(XLXN_92));
   INV  XLXI_135 (.I(D2), 
                 .O(XLXN_130));
endmodule
`timescale 1ns / 1ps

module Mux4to1b4_MUSER_disp_num(D0, 
                                D1, 
                                D2, 
                                D3, 
                                S, 
                                Y);

    input [3:0] D0;
    input [3:0] D1;
    input [3:0] D2;
    input [3:0] D3;
    input [1:0] S;
   output [3:0] Y;
   
   wire XLXN_6;
   wire XLXN_14;
   wire XLXN_24;
   wire XLXN_32;
   wire XLXN_36;
   wire XLXN_40;
   wire XLXN_63;
   wire XLXN_64;
   wire XLXN_65;
   wire XLXN_66;
   wire XLXN_67;
   wire XLXN_68;
   wire XLXN_69;
   wire XLXN_70;
   wire XLXN_71;
   wire XLXN_72;
   wire XLXN_73;
   wire XLXN_74;
   wire XLXN_75;
   wire XLXN_76;
   wire XLXN_77;
   wire XLXN_78;
   
   AND2  XLXI_1 (.I0(XLXN_14), 
                .I1(XLXN_6), 
                .O(XLXN_24));
   AND2  XLXI_2 (.I0(XLXN_14), 
                .I1(S[0]), 
                .O(XLXN_32));
   AND2  XLXI_3 (.I0(S[1]), 
                .I1(XLXN_6), 
                .O(XLXN_36));
   AND2  XLXI_4 (.I0(S[1]), 
                .I1(S[0]), 
                .O(XLXN_40));
   AND2  XLXI_5 (.I0(D0[0]), 
                .I1(XLXN_24), 
                .O(XLXN_63));
   AND2  XLXI_6 (.I0(D2[0]), 
                .I1(XLXN_36), 
                .O(XLXN_65));
   AND2  XLXI_7 (.I0(D3[0]), 
                .I1(XLXN_40), 
                .O(XLXN_66));
   AND2  XLXI_8 (.I0(D1[1]), 
                .I1(XLXN_32), 
                .O(XLXN_68));
   AND2  XLXI_9 (.I0(D3[1]), 
                .I1(XLXN_40), 
                .O(XLXN_70));
   AND2  XLXI_10 (.I0(D0[2]), 
                 .I1(XLXN_24), 
                 .O(XLXN_71));
   AND2  XLXI_11 (.I0(D1[2]), 
                 .I1(XLXN_32), 
                 .O(XLXN_72));
   AND2  XLXI_12 (.I0(D2[2]), 
                 .I1(XLXN_36), 
                 .O(XLXN_73));
   AND2  XLXI_13 (.I0(D2[1]), 
                 .I1(XLXN_36), 
                 .O(XLXN_69));
   AND2  XLXI_14 (.I0(D0[1]), 
                 .I1(XLXN_24), 
                 .O(XLXN_67));
   AND2  XLXI_15 (.I0(D1[0]), 
                 .I1(XLXN_32), 
                 .O(XLXN_64));
   AND2  XLXI_16 (.I0(D3[2]), 
                 .I1(XLXN_40), 
                 .O(XLXN_74));
   AND2  XLXI_17 (.I0(D0[3]), 
                 .I1(XLXN_24), 
                 .O(XLXN_75));
   AND2  XLXI_18 (.I0(D1[3]), 
                 .I1(XLXN_32), 
                 .O(XLXN_76));
   AND2  XLXI_19 (.I0(D2[3]), 
                 .I1(XLXN_36), 
                 .O(XLXN_77));
   AND2  XLXI_20 (.I0(D3[3]), 
                 .I1(XLXN_40), 
                 .O(XLXN_78));
   OR4  XLXI_21 (.I0(XLXN_66), 
                .I1(XLXN_65), 
                .I2(XLXN_64), 
                .I3(XLXN_63), 
                .O(Y[0]));
   OR4  XLXI_22 (.I0(XLXN_70), 
                .I1(XLXN_69), 
                .I2(XLXN_68), 
                .I3(XLXN_67), 
                .O(Y[1]));
   OR4  XLXI_23 (.I0(XLXN_74), 
                .I1(XLXN_73), 
                .I2(XLXN_72), 
                .I3(XLXN_71), 
                .O(Y[2]));
   OR4  XLXI_24 (.I0(XLXN_78), 
                .I1(XLXN_77), 
                .I2(XLXN_76), 
                .I3(XLXN_75), 
                .O(Y[3]));
   INV  XLXI_25 (.I(S[0]), 
                .O(XLXN_6));
   INV  XLXI_26 (.I(S[1]), 
                .O(XLXN_14));
endmodule
`timescale 1ns / 1ps

module Mux4to1_MUSER_disp_num(D0, 
                              D1, 
                              D2, 
                              D3, 
                              S, 
                              O1);

    input D0;
    input D1;
    input D2;
    input D3;
    input [1:0] S;
   output O1;
   
   wire XLXN_7;
   wire XLXN_8;
   wire XLXN_13;
   wire XLXN_14;
   wire XLXN_15;
   wire XLXN_16;
   wire XLXN_21;
   wire XLXN_22;
   wire XLXN_23;
   wire XLXN_24;
   
   AND2  XLXI_1 (.I0(XLXN_7), 
                .I1(XLXN_8), 
                .O(XLXN_13));
   AND2  XLXI_2 (.I0(XLXN_7), 
                .I1(S[0]), 
                .O(XLXN_14));
   AND2  XLXI_3 (.I0(S[1]), 
                .I1(XLXN_8), 
                .O(XLXN_15));
   AND2  XLXI_4 (.I0(S[1]), 
                .I1(S[0]), 
                .O(XLXN_16));
   AND2  XLXI_5 (.I0(D0), 
                .I1(XLXN_13), 
                .O(XLXN_21));
   AND2  XLXI_6 (.I0(D1), 
                .I1(XLXN_14), 
                .O(XLXN_22));
   AND2  XLXI_7 (.I0(D2), 
                .I1(XLXN_15), 
                .O(XLXN_23));
   AND2  XLXI_8 (.I0(D3), 
                .I1(XLXN_16), 
                .O(XLXN_24));
   INV  XLXI_9 (.I(S[0]), 
               .O(XLXN_8));
   INV  XLXI_10 (.I(S[1]), 
                .O(XLXN_7));
   OR4  XLXI_11 (.I0(XLXN_24), 
                .I1(XLXN_23), 
                .I2(XLXN_22), 
                .I3(XLXN_21), 
                .O(O1));
endmodule
`timescale 1ns / 1ps

module DisplaySync_MUSER_disp_num(HEXS, 
                                  LES, 
                                  points, 
                                  SCAN, 
                                  AN, 
                                  HEX, 
                                  LE, 
                                  p);

    input [15:0] HEXS;
    input [3:0] LES;
    input [3:0] points;
    input [1:0] SCAN;
   output [3:0] AN;
   output [3:0] HEX;
   output LE;
   output p;
   
   wire V0;
   wire V1;
   
   Mux4to1_MUSER_disp_num  XLXI_1 (.D0(points[0]), 
                                  .D1(points[1]), 
                                  .D2(points[2]), 
                                  .D3(points[3]), 
                                  .S(SCAN[1:0]), 
                                  .O1(p));
   Mux4to1_MUSER_disp_num  XLXI_2 (.D0(LES[0]), 
                                  .D1(LES[1]), 
                                  .D2(LES[2]), 
                                  .D3(LES[3]), 
                                  .S(SCAN[1:0]), 
                                  .O1(LE));
   Mux4to1b4_MUSER_disp_num  XLXI_3 (.D0(HEXS[3:0]), 
                                    .D1(HEXS[7:4]), 
                                    .D2(HEXS[11:8]), 
                                    .D3(HEXS[15:12]), 
                                    .S(SCAN[1:0]), 
                                    .Y(HEX[3:0]));
   Mux4to1b4_MUSER_disp_num  XLXI_4 (.D0({V1, V1, V1, V0}), 
                                    .D1({V1, V0, V1, V1}), 
                                    .D2({V1, V1, V0, V1}), 
                                    .D3({V0, V1, V1, V1}), 
                                    .S(SCAN[1:0]), 
                                    .Y(AN[3:0]));
   GND  XLXI_5 (.G(V0));
   VCC  XLXI_6 (.P(V1));
endmodule
`timescale 1ns / 1ps

module disp_num(clk, 
                HEXS, 
                LES, 
                points, 
                RST, 
                AN, 
                segment);

    input clk;
    input [15:0] HEXS;
    input [3:0] LES;
    input [3:0] points;
    input RST;
   output [3:0] AN;
   output [7:0] segment;
   
   wire [31:0] clkdiv;
   wire [3:0] HEX;
   wire XLXN_18;
   wire XLXN_19;
   
   DisplaySync_MUSER_disp_num  XLXI_1 (.HEXS(HEXS[15:0]), 
                                      .LES(LES[3:0]), 
                                      .points(points[3:0]), 
                                      .SCAN(clkdiv[18:17]), 
                                      .AN(AN[3:0]), 
                                      .HEX(HEX[3:0]), 
                                      .LE(XLXN_18), 
                                      .p(XLXN_19));
   MyMC14495_MUSER_disp_num  XLXI_2 (.D0(HEX[0]), 
                                    .D1(HEX[1]), 
                                    .D2(HEX[2]), 
                                    .D3(HEX[3]), 
                                    .LE(XLXN_18), 
                                    .point(XLXN_19), 
                                    .a(segment[0]), 
                                    .b(segment[1]), 
                                    .c(segment[2]), 
                                    .d(segment[3]), 
                                    .e(segment[4]), 
                                    .f(segment[5]), 
                                    .g(segment[6]), 
                                    .p(segment[7]));
   clkdiv  XLXI_3 (.clk(clk), 
                  .rst(RST), 
                  .clkdiv(clkdiv[31:0]));
endmodule
