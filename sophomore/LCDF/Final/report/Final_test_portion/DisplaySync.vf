////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : DisplaySync.vf
// /___/   /\     Timestamp : 01/02/2024 10:07:46
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -sympath /home/ise/Final_test_portion/ipcore_dir -intstyle ise -family kintex7 -verilog /home/ise/Final_test_portion/DisplaySync.vf -w /home/ise/Final_test_portion/DisplaySync.sch
//Design Name: DisplaySync
//Device: kintex7
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module Mux4to1b4_MUSER_DisplaySync(D0, 
                                   D1, 
                                   D2, 
                                   D3, 
                                   S, 
                                   Y);

    input [3:0] D0;
    input [3:0] D1;
    input [3:0] D2;
    input [3:0] D3;
    input [1:0] S;
   output [3:0] Y;
   
   wire XLXN_6;
   wire XLXN_14;
   wire XLXN_24;
   wire XLXN_32;
   wire XLXN_36;
   wire XLXN_40;
   wire XLXN_63;
   wire XLXN_64;
   wire XLXN_65;
   wire XLXN_66;
   wire XLXN_67;
   wire XLXN_68;
   wire XLXN_69;
   wire XLXN_70;
   wire XLXN_71;
   wire XLXN_72;
   wire XLXN_73;
   wire XLXN_74;
   wire XLXN_75;
   wire XLXN_76;
   wire XLXN_77;
   wire XLXN_78;
   
   AND2  XLXI_1 (.I0(XLXN_14), 
                .I1(XLXN_6), 
                .O(XLXN_24));
   AND2  XLXI_2 (.I0(XLXN_14), 
                .I1(S[0]), 
                .O(XLXN_32));
   AND2  XLXI_3 (.I0(S[1]), 
                .I1(XLXN_6), 
                .O(XLXN_36));
   AND2  XLXI_4 (.I0(S[1]), 
                .I1(S[0]), 
                .O(XLXN_40));
   AND2  XLXI_5 (.I0(D0[0]), 
                .I1(XLXN_24), 
                .O(XLXN_63));
   AND2  XLXI_6 (.I0(D2[0]), 
                .I1(XLXN_36), 
                .O(XLXN_65));
   AND2  XLXI_7 (.I0(D3[0]), 
                .I1(XLXN_40), 
                .O(XLXN_66));
   AND2  XLXI_8 (.I0(D1[1]), 
                .I1(XLXN_32), 
                .O(XLXN_68));
   AND2  XLXI_9 (.I0(D3[1]), 
                .I1(XLXN_40), 
                .O(XLXN_70));
   AND2  XLXI_10 (.I0(D0[2]), 
                 .I1(XLXN_24), 
                 .O(XLXN_71));
   AND2  XLXI_11 (.I0(D1[2]), 
                 .I1(XLXN_32), 
                 .O(XLXN_72));
   AND2  XLXI_12 (.I0(D2[2]), 
                 .I1(XLXN_36), 
                 .O(XLXN_73));
   AND2  XLXI_13 (.I0(D2[1]), 
                 .I1(XLXN_36), 
                 .O(XLXN_69));
   AND2  XLXI_14 (.I0(D0[1]), 
                 .I1(XLXN_24), 
                 .O(XLXN_67));
   AND2  XLXI_15 (.I0(D1[0]), 
                 .I1(XLXN_32), 
                 .O(XLXN_64));
   AND2  XLXI_16 (.I0(D3[2]), 
                 .I1(XLXN_40), 
                 .O(XLXN_74));
   AND2  XLXI_17 (.I0(D0[3]), 
                 .I1(XLXN_24), 
                 .O(XLXN_75));
   AND2  XLXI_18 (.I0(D1[3]), 
                 .I1(XLXN_32), 
                 .O(XLXN_76));
   AND2  XLXI_19 (.I0(D2[3]), 
                 .I1(XLXN_36), 
                 .O(XLXN_77));
   AND2  XLXI_20 (.I0(D3[3]), 
                 .I1(XLXN_40), 
                 .O(XLXN_78));
   OR4  XLXI_21 (.I0(XLXN_66), 
                .I1(XLXN_65), 
                .I2(XLXN_64), 
                .I3(XLXN_63), 
                .O(Y[0]));
   OR4  XLXI_22 (.I0(XLXN_70), 
                .I1(XLXN_69), 
                .I2(XLXN_68), 
                .I3(XLXN_67), 
                .O(Y[1]));
   OR4  XLXI_23 (.I0(XLXN_74), 
                .I1(XLXN_73), 
                .I2(XLXN_72), 
                .I3(XLXN_71), 
                .O(Y[2]));
   OR4  XLXI_24 (.I0(XLXN_78), 
                .I1(XLXN_77), 
                .I2(XLXN_76), 
                .I3(XLXN_75), 
                .O(Y[3]));
   INV  XLXI_25 (.I(S[0]), 
                .O(XLXN_6));
   INV  XLXI_26 (.I(S[1]), 
                .O(XLXN_14));
endmodule
`timescale 1ns / 1ps

module Mux4to1_MUSER_DisplaySync(D0, 
                                 D1, 
                                 D2, 
                                 D3, 
                                 S, 
                                 O1);

    input D0;
    input D1;
    input D2;
    input D3;
    input [1:0] S;
   output O1;
   
   wire XLXN_7;
   wire XLXN_8;
   wire XLXN_13;
   wire XLXN_14;
   wire XLXN_15;
   wire XLXN_16;
   wire XLXN_21;
   wire XLXN_22;
   wire XLXN_23;
   wire XLXN_24;
   
   AND2  XLXI_1 (.I0(XLXN_7), 
                .I1(XLXN_8), 
                .O(XLXN_13));
   AND2  XLXI_2 (.I0(XLXN_7), 
                .I1(S[0]), 
                .O(XLXN_14));
   AND2  XLXI_3 (.I0(S[1]), 
                .I1(XLXN_8), 
                .O(XLXN_15));
   AND2  XLXI_4 (.I0(S[1]), 
                .I1(S[0]), 
                .O(XLXN_16));
   AND2  XLXI_5 (.I0(D0), 
                .I1(XLXN_13), 
                .O(XLXN_21));
   AND2  XLXI_6 (.I0(D1), 
                .I1(XLXN_14), 
                .O(XLXN_22));
   AND2  XLXI_7 (.I0(D2), 
                .I1(XLXN_15), 
                .O(XLXN_23));
   AND2  XLXI_8 (.I0(D3), 
                .I1(XLXN_16), 
                .O(XLXN_24));
   INV  XLXI_9 (.I(S[0]), 
               .O(XLXN_8));
   INV  XLXI_10 (.I(S[1]), 
                .O(XLXN_7));
   OR4  XLXI_11 (.I0(XLXN_24), 
                .I1(XLXN_23), 
                .I2(XLXN_22), 
                .I3(XLXN_21), 
                .O(O1));
endmodule
`timescale 1ns / 1ps

module DisplaySync(HEXS, 
                   LES, 
                   points, 
                   SCAN, 
                   AN, 
                   HEX, 
                   LE, 
                   p);

    input [15:0] HEXS;
    input [3:0] LES;
    input [3:0] points;
    input [1:0] SCAN;
   output [3:0] AN;
   output [3:0] HEX;
   output LE;
   output p;
   
   wire V0;
   wire V1;
   
   Mux4to1_MUSER_DisplaySync  XLXI_1 (.D0(points[0]), 
                                     .D1(points[1]), 
                                     .D2(points[2]), 
                                     .D3(points[3]), 
                                     .S(SCAN[1:0]), 
                                     .O1(p));
   Mux4to1_MUSER_DisplaySync  XLXI_2 (.D0(LES[0]), 
                                     .D1(LES[1]), 
                                     .D2(LES[2]), 
                                     .D3(LES[3]), 
                                     .S(SCAN[1:0]), 
                                     .O1(LE));
   Mux4to1b4_MUSER_DisplaySync  XLXI_3 (.D0(HEXS[3:0]), 
                                       .D1(HEXS[7:4]), 
                                       .D2(HEXS[11:8]), 
                                       .D3(HEXS[15:12]), 
                                       .S(SCAN[1:0]), 
                                       .Y(HEX[3:0]));
   Mux4to1b4_MUSER_DisplaySync  XLXI_4 (.D0({V1, V1, V1, V0}), 
                                       .D1({V1, V0, V1, V1}), 
                                       .D2({V1, V1, V0, V1}), 
                                       .D3({V0, V1, V1, V1}), 
                                       .S(SCAN[1:0]), 
                                       .Y(AN[3:0]));
   GND  XLXI_5 (.G(V0));
   VCC  XLXI_6 (.P(V1));
endmodule
